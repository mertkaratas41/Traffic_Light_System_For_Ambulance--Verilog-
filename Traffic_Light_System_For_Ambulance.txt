//HALF ADDER-YARI TOPLAYICI

module half_adder(a,b,c,s);
  input a,b;
  output c,s;
  
  xor xor1(s,a,b);
  and and1(c,a,b);

endmodule



//1bit full adder
module full_adder(a,b,cin,cout,s);
  input a,b,cin;
  output cout,s;

 wire w1,w2,w3;

  half_adder ha1(.a(a), .b(b),.c(w1),.s(w2));
  half_adder ha2(.a(w2), .b(cin),.c(w3),.s(s));
   
   
  or or1(cout,w1,w3);

endmodule

//4bit adder

module fourbit_adder(a0,a1,a2,a3,b0,b1,b2,b3,cin,s0,s1,s2,cout);
  
  input a0,a1,a2,a3,b0,b1,b2,b3;
  input cin;
  output s0,s1,s2,s3;
  output cout;
 
  
  wire c1,c2,c3;
  
  full_adder f1(.a(a0),.b(b0),.cin(cin),.s(s0),.cout(c1));
  full_adder f2(.a(a1),.b(b1),.cin(c1),.s(s1),.cout(c2));
  full_adder f3(.a(a2),.b(b2),.cin(c2),.s(s2),.cout(c3));
  full_adder f4(.a(a3),.b(b3),.cin(c3),.s(s3),.cout(cout)); 
   
  
    
  
  
  
 endmodule

//COUNTER--SAYAÇ

module sayac(clk,reset_n,data_in,S,data_out);

  input clk;
  input reset_n;
  input [7:0] data_in;
  input [1:0] S;
  output reg [7:0] data_out=0;

  always @(posedge clk)
    begin
      
      if(reset_n==0)
        data_in=reset_n;
        else
         case(S)
           0: data_out=data_out;
           1: data_out=data_out+1;
           2: data_out=data_out-1;
           3: data_out=data_in;
         endcase
    
    
    
    
      end

endmodule

//TRAFFIC LIGHT SYSTEM FOR AMBULANCE--AMBULANS İÇİN TRAFİK IŞIĞI KONTROL SİSTEMİ

module first(clk,reset_n,ambulance1,ambulance2,traffic_lights_1,traffic_lights_2);
	input clk,reset,ambulance1, ambulance2;
  	output reg [2:0] traffic_lights_1;
	output reg [2:0] traffic_lights_2;

	reg [2:0] state;
	reg [2:0] last_state;
	reg [3:0] count;
	
	parameter S0 = 3'b000;
	parameter S1 = 3'b001;	
	parameter S2 = 3'b002;
	parameter S3 = 3'b003;
	parameter S4 = 3'b004;
	parameter S5 = 3'b005;
	parameter S6 = 3'b006;
	parameter S7 = 3'b007;

	parameter SEC15 = 4'b1111;
	parameter SEC3 = 4'b0011;
	parameter SEC5 = 4'b0101;

	
	
	always @(posedge clk)
	  begin
 	     if(reset == 0)
		begin
		  state <=0;
		  count <=0;
		end
	      else
		case(state)
		 S0: if(count < SEC15)
		   begin
		     state <=S0;
		     count <=count +1;
		     $display("S0 count = %d",count);
		     if(ambulance1 == 1)
			begin
			  last_state <= state;
			  state <=S6;
			  count <=0;
			end
		     else if(ambulance2 == 1)
			begin
			  last_state <= state;
			  state <=S7;
			  count <=0;
			end
		     else 
			begin
			  state <= S1;
			  count <=0;	
		    end

           	 S1: if(count < SEC3)
		   begin
		     state <=S1;
		     count <=count +1;
		     $display("S1 count = %d",count);
		     if(ambulance1 == 1)
			begin
			  last_state <= state;
			  state <=S6;
			  count <=0;
			end
		     else if(ambulance2 == 1)
			begin
			  last_state <= state;
			  state <=S7;
			  count <=0;
			end
		     else 
			begin
			  state <= S2;
			  count <=0;	
		    end
	
		   S2: if(count < SEC3)
		   begin
		     state <=S2;
		     count <=count +1;
		     $display("S2 count = %d",count);
		     if(ambulance1 == 1)
			begin
			  last_state <= state;
			  state <=S6;
			  count <=0;
			end
		     else if(ambulance2 == 1)
			begin
			  last_state <= state;
			  state <=S7;
			  count <=0;
			end
		     else 
			begin
			  state <= S3;
			  count <=0;	
		    end



		   S3: if(count < SEC15)
		   begin
		     state <=S3;
		     count <=count +1;
		     $display("S0 count = %d",count);
		     if(ambulance1 == 1)
			begin
			  last_state <= state;
			  state <=S6;
			  count <=0;
			end
		     else if(ambulance2 == 1)
			begin
			  last_state <= state;
			  state <=S7;
			  count <=0;
			end
		     else 
			begin
			  state <= S4;
			  count <= 0;	
		    end


		     S4: if(count < SEC3)
		   begin
		     state <=S4;
		     count <=count +1;
		     $display("S0 count = %d",count);
		     if(ambulance1 == 1)
			begin
			  last_state <= state;
			  state <=S6;
			  count <=0;
			end
		     else if(ambulance2 == 1)
			begin
			  last_state <= state;
			  state <=S7;
			  count <=0;
			end
		     else 
			begin
			  state <= S5;
			  count <=0;	
		    end

		

		    S5: if(count < SEC3)
		   begin
		     state <=S5;
		     count <=count +1;
		     $display("S0 count = %d",count);
		     if(ambulance1 == 1)
			begin
			  last_state <= state;
			  state <=S6;
			  count <=0;
			end
		     else if(ambulance2 == 1)
			begin
			  last_state <= state;
			  state <=S7;
			  count <=0;
			end
		     else 
			begin
			  state <= S0;
			  count <=0;	
		    end


		    S6: if(count < SEC5)
		   begin
		     state <=S6;
		     count <=count +1;
		     $display("Ambulance count = %d",count);
		     $display("ISIK 1 count = %d",traffic_lights_1);
		     $display("ISIK 2 count = %d",traffic_lights_2);		     
		   end
		else 
		   begin
			  state <= last_state;
			  count <=0;
			  ambulance1 <= 0;
			end
		

			
		    S7: if(count < SEC5)
		   begin
		     state <=S7;
		     count <=count +1;
		     $display("Ambulance count = %d",count);
		     $display("ISIK 1 count = %d",traffic_lights_1);
		     $display("ISIK 2 count = %d",traffic_lights_2);		     
		   end
		else 
		   begin
			  state <= last_state;
			  count <=0;
			  ambulance2 <= 0;
			end
		endcase
		end

	always  @(*)
	   begin
		case(state)
		S0:
		begin
			


















